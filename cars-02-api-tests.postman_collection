{
	"info": {
		"_postman_id": "2e9935a8-a17c-4a19-af53-b93c8508f8ef",
		"name": "cars-02 Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27852418"
	},
	"item": [
		{
			"name": "SECURITY",
			"item": [
				{
					"name": "create-users",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"passwordConfirmation\": \"\",\r\n    \"role\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IS_AUTH",
			"item": [
				{
					"name": "cars-mileage",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/is_auth/cars/mileage",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"is_auth",
								"cars",
								"mileage"
							]
						}
					},
					"response": []
				},
				{
					"name": "cars-statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/is_auth/cars/statistic/:statisticItem",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"is_auth",
								"cars",
								"statistic",
								":statisticItem"
							],
							"variable": [
								{
									"key": "statisticItem",
									"value": "",
									"description": "PRICE, MILEAGE or ENGINE_POWER"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cars-with-specified-body-and-price",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/is_auth/cars/with_specified/:carBody/:priceFrom/:priceTo",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"is_auth",
								"cars",
								"with_specified",
								":carBody",
								":priceFrom",
								":priceTo"
							],
							"variable": [
								{
									"key": "carBody",
									"value": "",
									"description": "SEDAN, HATCHBACK, COMBI"
								},
								{
									"key": "priceFrom",
									"value": ""
								},
								{
									"key": "priceTo",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "cars-with-specified-engine",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/is_auth/cars/with_specified/:engineType",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"is_auth",
								"cars",
								"with_specified",
								":engineType"
							],
							"variable": [
								{
									"key": "engineType",
									"value": "diesel",
									"description": "DIESEL, GASOLINE, LPG"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "cars-tyre-types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/cars/tyre_type",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"cars",
								"tyre_type"
							]
						}
					},
					"response": []
				},
				{
					"name": "cars-with-component",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/cars/components/:components",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"cars",
								"components",
								":components"
							],
							"variable": [
								{
									"key": "components",
									"value": "",
									"description": "Separate components with \"-\". This method returns cars with exactly given components, not at with least one of given component."
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ALL",
			"item": [
				{
					"name": "all-cars",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/all/cars",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"all",
								"cars"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}